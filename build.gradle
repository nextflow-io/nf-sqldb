/*
 * Copyright 2020-2025, Seqera Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Add the download plugin
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:4.1.2'
    }
}

plugins {
    id 'io.nextflow.nextflow-plugin' version '0.0.1-alpha'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        groovy {
            srcDirs = ['src/test/groovy']
        }
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://s3-eu-west-1.amazonaws.com/maven.seqera.io/releases' }
    maven { url = 'https://s3-eu-west-1.amazonaws.com/maven.seqera.io/snapshots' }
}

dependencies {
    // API dependencies from the original build.gradle
    api("org.apache.groovy:groovy-sql:4.0.23") { transitive = false }
    api 'com.h2database:h2:1.4.200'
    api 'mysql:mysql-connector-java:8.0.33'
    api 'org.mariadb.jdbc:mariadb-java-client:2.7.0'
    api 'org.postgresql:postgresql:42.7.4'
    api 'org.xerial:sqlite-jdbc:3.47.0.0'
    api 'org.duckdb:duckdb_jdbc:0.10.2'
    
    // Replace commons-logging with jcl-over-slf4j
    implementation 'org.slf4j:jcl-over-slf4j:2.0.7'
    
    // JDBC driver for AWS Athena
    api files('src/dist/lib/AthenaJDBC42_2.0.25.1001.jar')
    implementation fileTree(dir: 'src/dist/lib/libs', include: '*.jar')
    
    // Test dependencies
    testImplementation "org.apache.groovy:groovy:4.0.23"
    testImplementation "org.apache.groovy:groovy-nio:4.0.23"
    testImplementation ("org.apache.groovy:groovy-test:4.0.23") { exclude group: 'org.apache.groovy' }
    testImplementation ("cglib:cglib-nodep:3.3.0")
    testImplementation ("org.objenesis:objenesis:3.1")
    testImplementation ("org.spockframework:spock-core:2.3-groovy-4.0") { exclude group: 'org.apache.groovy'; exclude group: 'net.bytebuddy' }
    testImplementation ('org.spockframework:spock-junit4:2.3-groovy-4.0') { exclude group: 'org.apache.groovy'; exclude group: 'net.bytebuddy' }
    testImplementation ('com.google.jimfs:jimfs:1.1')

    // Add back Nextflow test dependencies
    testImplementation "io.nextflow:nextflow:${nextflowPlugin.nextflowVersion}"
    testImplementation(testFixtures("io.nextflow:nextflow:${nextflowPlugin.nextflowVersion}"))
    testImplementation(testFixtures("io.nextflow:nf-commons:${nextflowPlugin.nextflowVersion}"))
}

configurations {
    // see https://docs.gradle.org/4.1/userguide/dependency_management.html#sub:exclude_transitive_dependencies
    runtimeClasspath.exclude group: 'org.slf4j', module: 'slf4j-api'
}

// Use the version from the MANIFEST.MF
version = '0.6.0'

nextflowPlugin {
    // From the MANIFEST.MF
    nextflowVersion = '24.04.0'
    
    provider = 'Seqera Labs'
    className = 'nextflow.sql.SqlPlugin'
    extensionPoints = [
        'nextflow.sql.ChannelSqlExtension'
    ]
    
    publishing {
        github {
            repository = 'seqera/nf-sqldb'
            userName = project.findProperty('github_username')
            authToken = project.findProperty('github_access_token')
            email = project.findProperty('github_commit_email')
            
            // You may need to adjust this URL if the central plugin index is different
            indexUrl = 'https://github.com/nextflow-io/plugins/main/plugins.json'
        }
    }
}

// Configure the packagePlugin task to handle duplicates
tasks.named('packagePlugin') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Add test configuration for Java modules
test {
    useJUnitPlatform()
    jvmArgs = ['--add-opens=java.base/java.lang=ALL-UNNAMED',
               '--add-opens=java.base/java.util=ALL-UNNAMED',
               '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

// AWS Athena dependencies setup - migrated from the original build.gradle
apply plugin: 'de.undercouch.download'

task downloadAthenDep(type: Download) {
    src 'https://s3.amazonaws.com/athena-downloads/drivers/JDBC/SimbaAthenaJDBC-2.0.25.1001/SimbaAthenaJDBC-2.0.25.1001.zip'
    dest new File(buildDir, 'downloads/SimbaAthenaJDBC-2.0.25.1001.zip')
    overwrite false
}

task verifyAthenDep(type: Verify, dependsOn: downloadAthenDep) {
    src new File(buildDir, 'downloads/SimbaAthenaJDBC-2.0.25.1001.zip')
    algorithm 'MD5'
    checksum '71504d0317656d790978363358d0c068'
}

task unzipAthenDep(dependsOn: verifyAthenDep, type: Copy) {
    from zipTree(new File(buildDir, 'downloads/SimbaAthenaJDBC-2.0.25.1001.zip'))
    into "${buildDir}/downloads/unzip/awsathena/"
}

task copyAthenDep(dependsOn: unzipAthenDep, type: Copy) {
    from file(new File(buildDir, '/downloads/unzip/awsathena/SimbaAthenaJDBC-2.0.25.1001/AthenaJDBC42_2.0.25.1001.jar'))
    into "src/dist/lib"
}

// Make sure compileGroovy depends on copyAthenDep
compileGroovy.dependsOn(copyAthenDep)

// Hook into the assemble task to ensure Athena dependencies are properly set up
assemble.dependsOn('copyAthenDep') 